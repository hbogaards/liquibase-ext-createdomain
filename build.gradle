buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.6'
    id 'net.researchgate.release' version '2.3.4'
}

buildDir = 'target-gradle'
group = 'nl.anwb.hv.lib'

sourceCompatibility=1.6
targetCompatibility=1.6

repositories { 
    mavenLocal()
    maven { 
        url "https://nexus.anwb.local/content/groups/public" 
        name 'nexus'
    }
    jcenter()
}

dependencies { 
    compile 'org.liquibase:liquibase-core:3.3.0'
}

jar {
    manifest {
        attributes (provider: 'gradle', 'Liquibase-Package': 'nl.anwb.hv.lib.liquibase.ext')
    }
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

jar.finalizedBy sourcesJar

artifacts {
    sourcesJar
    javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

release {
    tagTemplate = '${name}-${version}'
    failOnSnapshotDependencies = true

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
    }
}

afterReleaseBuild.dependsOn uploadArchives

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
        }
    }
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    publications = ['mavenJava']
    publish = true
    dryRun = hasProperty('dryRun') ? property('dryRun') : false
    pkg {
        repo = project.hasProperty('repo') ? project.repo : 'maven'
        name = "$project.name"
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.vcsUrl
        licenses =  ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            name = project.version
        }
    }
}
